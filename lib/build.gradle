// Imports for any code used within the build
import java.util.regex.Pattern

apply plugin: 'com.android.library'

repositories {
    maven {url "https://raw.github.com/kmchugh/karyon/mvn-repo"}
    maven {url "https://raw.github.com/kmchugh/karyon.data/mvn-repo"}
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

android {
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    compileSdkVersion 18
    buildToolsVersion '21.1.2'

    defaultConfig {
        minSdkVersion 11
        // Must stick to robolectric supported versions
        targetSdkVersion 18
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
            renderscriptDebuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }
}
// Used to include the R java source for tests
android.sourceSets.test.java.srcDirs += "build/generated/source/r/debug"


dependencies {
    compile "uk.co.icatalyst:karyon:${karyon_version}"
    compile "uk.co.icatalyst:karyon.data:${karyon_data_version}"
    compile "com.android.support:appcompat-v7:${appcompat_version}"

    testCompile "com.android.support:appcompat-v7:${appcompat_version}"
    testCompile "junit:junit:${junit_version}"
    testCompile "org.mockito:mockito-core:${mockito_core_version}"
    //testCompile "com.google.android.maps:maps:18_r3"
    testCompile "com.android.support:support-v4:19.0.1"
    testCompile "org.robolectric:robolectric:${robolectric_version}"
    // Workaround for issue when testing from command line
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        './src/main/java'
]

gradle.taskGraph.whenReady { taskGraph ->

    // Update the min and target SDKs for robolectric
    def classFile = file('src/test/java/karyon/android/Config.java')
    def text = classFile.getText();
    def matcher = Pattern.compile("m_nMinSDKVersion.=.(\\d+);").matcher(text);
    text = matcher.replaceAll("m_nMinSDKVersion = " + android.defaultConfig.minSdkVersion.mApiLevel + ";")

    matcher = Pattern.compile("m_nTargetSDKVersion.=.(\\d+);").matcher(text);
    text = matcher.replaceAll("m_nTargetSDKVersion = " + android.defaultConfig.targetSdkVersion.mApiLevel + ";")

    classFile.write(text);
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('./build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}

